[
    {
        "Id": "sha256:dd4c13110c8cbf94015213b0b4742528a443d5e54a5e3280190a963ab4e39975",
        "RepoTags": [
            "ghcr.io/abcdesktopio/gedit.d:4.2"
        ],
        "RepoDigests": [
            "ghcr.io/abcdesktopio/gedit.d@sha256:166d70c37257ffc9580b1f4af170a7c4141be695e6c440d5d78b0e7ce73ddfb4"
        ],
        "Parent": "",
        "Comment": "buildkit.dockerfile.v0",
        "Created": "2025-10-19T19:33:21.538360944Z",
        "DockerVersion": "",
        "Author": "Alexandre DEVELY",
        "Config": {
            "Hostname": "",
            "Domainname": "",
            "User": "root",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "Tty": false,
            "OpenStdin": false,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                "TERM=linux",
                "LANG=en_US.utf8",
                "ABCDESKTOP_LOCALACCOUNT_DIR=/etc/localaccount",
                "APPNAME=Gedit",
                "APPBIN=/usr/bin/gedit",
                "APP=/usr/bin/gedit"
            ],
            "Cmd": [
                "/composer/appli-docker-entrypoint.sh"
            ],
            "ArgsEscaped": true,
            "Image": "",
            "Volumes": null,
            "WorkingDir": "/",
            "Entrypoint": null,
            "OnBuild": null,
            "Labels": {
                "oc.acl": "{\"permit\":[\"all\"]}",
                "oc.cat": "office",
                "oc.desktopfile": "gedit.desktop",
                "oc.displayname": "Gedit",
                "oc.fileextensions": "txt",
                "oc.icon": "gedit.svg",
                "oc.icondata": "",
                "oc.keyword": "gedit,editor",
                "oc.launch": "gedit.Gedit",
                "oc.legacyfileextensions": "txt",
                "oc.mimetype": "text/plain;",
                "oc.name": "Gedit",
                "oc.path": "/usr/bin/gedit",
                "oc.rules": "{\"homedir\":{\"default\":true}}",
                "oc.template": "ghcr.io/abcdesktopio/oc.template.alpine",
                "oc.type": "app"
            }
        },
        "Architecture": "amd64",
        "Os": "linux",
        "Size": 335353992,
        "GraphDriver": {
            "Data": {
                "LowerDir": "/var/lib/docker/overlay2/35a920bee964228c99f7bc43ee07184b442d50cd7513dc77330ca52df697fcf3/diff:/var/lib/docker/overlay2/58b520da3d2aafa7241bb7f315284934b8b8e27c48628931a4e88b62f37ccbfe/diff:/var/lib/docker/overlay2/f7e41ebffef94032795bbf4663032d2a60b50c1b47b90d77d2c58c47f2238769/diff:/var/lib/docker/overlay2/1e790a808553df4273849f5ea144aa064f7dc419036deee396a9b66c87f76b54/diff:/var/lib/docker/overlay2/7873d7de514c45fe84b362d51cd7f4edc1d1ee0fa7cb2a583213597f9be42e82/diff:/var/lib/docker/overlay2/a026cf1f59172aaa51cd7487795208574ad1f7f15d7d797f0006f5b7a86336eb/diff:/var/lib/docker/overlay2/f4ae9b7baa9a7be339a06ad50604e150e7a45f7b86f957d59f146db58fbaa021/diff:/var/lib/docker/overlay2/06392ca72f12bd78e2c34e885feacd0ccbb086a1a5cdc1297e7a388fe3781cc2/diff:/var/lib/docker/overlay2/fe0b30e0b955baba3c829cbbd890e5380bd5553a840cdedd6d86f53e1b3b770d/diff:/var/lib/docker/overlay2/3e986a9da30a8c693ae37bdff1b0d62addaea42248fef0a10db7e3e4c5f90cf2/diff:/var/lib/docker/overlay2/2918bf5674042c498928cdabfff2375dbe46bb7294d3e1cd5da18d616b119e01/diff:/var/lib/docker/overlay2/c226f08dae5a6b2c1e3829fae04a854f3b7862bd54fcbcd4636222b5a82722f8/diff:/var/lib/docker/overlay2/d6aa43099cf40c5c59fadb6662d42d8db9ef062991b93a7099ad2ad06632e2ba/diff",
                "MergedDir": "/var/lib/docker/overlay2/e5a90f24869e7646406cdc2db149c531142eb4e39fe1c530aac153e26841ec78/merged",
                "UpperDir": "/var/lib/docker/overlay2/e5a90f24869e7646406cdc2db149c531142eb4e39fe1c530aac153e26841ec78/diff",
                "WorkDir": "/var/lib/docker/overlay2/e5a90f24869e7646406cdc2db149c531142eb4e39fe1c530aac153e26841ec78/work"
            },
            "Name": "overlay2"
        },
        "RootFS": {
            "Type": "layers",
            "Layers": [
                "sha256:418dccb7d85a63a6aa574439840f7a6fa6fd2321b3e2394568a317735e867d35",
                "sha256:be575144df86b2f56406bac89a72c3f6a9917dc40b3571f7d26755756cd12291",
                "sha256:fa546a98cad647abe9580ffa946eaf73ec88a3fe65b3a619b4834e5149be419c",
                "sha256:f8c49e116ca61c8a89ce3fbed2560b1a9826d063ee8955883dbfe10c6d79a70f",
                "sha256:b8802b9ee762d0b07a2e0a7535b86685b82decf5b812bbc4734acaaacdf230a0",
                "sha256:8293c4773190b2d4480d12e2eb486df4d0c1186495c37cf052e201cca676b733",
                "sha256:0d718b8376a308de4284406de28d935b4d7891e878ff6afd661d6516cbd36cfb",
                "sha256:70c1f6a896f5c1d231a18752cb755f730e999159c88281af4c0db50af3191330",
                "sha256:d9cb8377b0508b47ab02729c10087e73274faa77ad88c991a9c987b833b0464f",
                "sha256:4cdc3a7862e57ea22755656c7b08997ad2bff58a13ccfbca98381ba4fe88bf01",
                "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                "sha256:a3200d62beef9b7ebdd9ab0178af7d009987fe4de6a8520b29069c8fdeb0dde8",
                "sha256:837703e6246bfb0015af88b8cd64f13820912a73627a203e3d17177853583d43",
                "sha256:f67d18b86659759bd94f0a43561857ed85a391ef866958167a0e6d1f33cb2b0b"
            ]
        },
        "Metadata": {
            "LastTagTime": "0001-01-01T00:00:00Z"
        }
    }
]
