# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  repository_dispatch:
    types: dispatch-from-oc.apps

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  
  # This workflow contains a single job called "build"
  build:
  
    concurrency: images
  
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a dump-github-event-client_payload command using the runners shell
      - name: dump-github-event-client_payload
        run: |
          echo "current image is ${{ github.event.client_payload.image }}"
          echo "current image tag is ${{ github.event.client_payload.tag }}"
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
       
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
          
      - run: mkdir -p artifact
      
      - name: Docker inspect
        id: set-jsonimage
        env: 
          image: ${{ github.event.client_payload.image }}
          imagetag: ${{ github.event.client_payload.tag }}
        run: |
          docker pull docker.io/abcdesktopio/${{ env.image }}:${{ env.imagetag }} 
          docker image inspect docker.io/abcdesktopio/${{ env.image }}:${{ env.imagetag }} > artifact/${{ env.image }}.${{ env.imagetag }}.json
          cat artifact/${{ env.image }}.${{ env.imagetag }}.json
          
      - uses: actions/upload-artifact@v3
        env: 
          image: ${{ github.event.client_payload.image }}
          imagetag: ${{ github.event.client_payload.tag }}
        with:
          name: artifact-${{ env.image }}
          path: artifact/${{ env.image }}.${{ env.imagetag }}.json
          if-no-files-found: warn # 'error' or 'ignore' are also available, defaults to `warn`
          
      - name: Commit build artifacts 
        env: 
          CI_COMMIT_MESSAGE: Continuous Integration Build Artifacts
          CI_COMMIT_AUTHOR: ${{ github.event.repository.name }} Continuous Integration
          image: ${{ github.event.client_payload.image }}
          imagetag: ${{ github.event.client_payload.tag }}
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "abcdesktop@users.noreply.github.com"
          cat artifact/${{ env.image }}.${{ env.imagetag }}.json
          git add artifact/${{ env.image }}.${{ env.imagetag }}.json
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}" artifact/${{ env.image }}.${{ env.imagetag }}.json
          git pull
          git push         
