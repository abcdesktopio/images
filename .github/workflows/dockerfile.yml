# This is a basic workflow to help you get started with Actions

name: CI-dockerfile

# Controls when the workflow will run
on:
  repository_dispatch:
    types: dispatch-dockerfile-from-oc.apps

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  # This workflow contains a single job called "build"
  build:
  
    #concurrency:
    # group: ${{ github.event.client_payload.image }}-${{ github.event.client_payload.tag }}
    # cancel-in-progress: true
  
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a dump-github-event-client_payload command using the runners shell
      - name: dump-github-event-client_payload
        run: |
          echo "event current ref_name is ${{ github.event.client_payload.ref_name }}"
          echo "event current artifact is ${{ github.event.client_payload.artifact }}"
          echo "event current run_id is ${{ github.event.client_payload.run_id }}"

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      - uses: actions/download-artifact@v4
        with:
           name: ${{ github.event.client_payload.artifact }}
           repository: abcdesktopio/oc.apps
           run-id: ${{ github.event.client_payload.run_id }}
           path: artifact/${{ github.event.client_payload.ref_name }}
          
      - name: Commit build artifacts 
        env: 
          CI_COMMIT_MESSAGE: Continuous Integration Build Artifacts
          CI_COMMIT_AUTHOR: ${{ github.event.repository.name }} Continuous Integration
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: |
            git config --global pull.ff only
            git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
            git config --global user.email "abcdesktop@users.noreply.github.com"
            ls -la artifact/${{ github.event.client_payload.ref_name }}
            git add artifact/${{ github.event.client_payload.ref_name }}/*.d
            git commit -m "Dockerfile ${{ env.CI_COMMIT_MESSAGE }}" artifact/${{ github.event.client_payload.ref_name }}/*.d
            git pull --rebase origin main
            git push --force origin main        
